package com.boonya.gis.algorithm;

import java.util.ArrayList;
import java.util.List;
/**
 * 
 * @author PJL
 *
 * @note     功能描述:TODOWKT格式转换
 * @package  com.boonya.gis.algorithm
 * @filename WKTUtil.java
 * @date     2019年4月15日 下午5:55:59
 */
public class WKTUtil {
	
	public static String wkt_sample="LINESTRING(116.2635628 39.9056225,116.2632708 39.9055305,116.26325779999999 39.9055225,116.26326279999999 39.9055215,116.2636838 39.9054585,116.2634018 39.9056065,116.2630878 39.9056025,116.2634028 39.9056575,116.2637088 39.9056415,116.2633728 39.9056435,116.2630428 39.9056895,116.2638028 39.9055345,116.2634448 39.9056685,116.2631638 39.9055655,116.26347679999999 39.9056065,116.26317279999999 39.9056025,116.26366279999999 39.9054195,116.2633678 39.9054845,116.2634978 39.9055705,116.26366279999999 39.9058025,116.2635518 39.9055275,116.26384279999999 39.9056705,116.2639848 39.9058955,116.2643008 39.9057755,116.26397779999999 39.9057315,116.2639128 39.9054105,116.26418079999999 39.9056305,116.2638738 39.9056485,116.2635288 39.9056205,116.2638328 39.9055335,116.2634808 39.9055585,116.2638128 39.9054555,116.2635598 39.9056445,116.2633858 39.9058435,116.2633458 39.9058315,116.2637818 39.9055885,116.2634448 39.9055795,116.2637568 39.9056125,116.26347679999999 39.9054915,116.2631588 39.9054785,116.26384879999999 39.9056165,116.2635298 39.9055025,116.2633828 39.9055395,116.2637548 39.9056265,116.2641368 39.9055195,116.26376379999999 39.9055445,116.2634648 39.9054655,116.2633328 39.9054475,116.2637908 39.9055455,116.2636198 39.9053265,116.2635978 39.9050845,116.26361279999999 39.9055645,116.2632938 39.9056105,116.26357279999999 39.9055135,116.2632998 39.9056205,116.2636158 39.9055295,116.2632168 39.9055235,116.2628368 39.9055655,116.2636758 39.9054785,116.2633518 39.9054585,116.2636988 39.9054005,116.2633498 39.9054805,116.2636768 39.9053725,116.2639848 39.9053715,116.26365679999999 39.9054545,116.26376479999999 39.9052125,116.26355579999999 39.9054085,116.2638558 39.9054725,116.26352179999999 39.9054925,116.2636278 39.9057825,116.26360679999999 39.9055065,116.2634638 39.9054815,116.26368579999999 39.9056425,116.2642528 39.9053245,116.2639118 39.9054265,116.2635428 39.9054555,116.2638628 39.9055855,116.2639378 39.9052925,116.2635798 39.9055435,116.2638528 39.9053995,116.2635648 39.9054845,116.2635648 39.9054825,116.2629898 39.9055115,116.2622008 39.9055675,116.2624398 39.9053265,116.2627048 39.9051645,116.26313379999999 39.9050575,116.2634338 39.9052425,116.2632328 39.9054455,116.2632208 39.9054225,116.2635408 39.9054175,116.2635138 39.9053255,116.26335279999999 39.9054515,116.2636678 39.9055865,116.2635888 39.9056325,116.2635748 39.9054875,116.2632388 39.9055145,116.2631638 39.9055245,116.2638588 39.9055995,116.26365679999999 39.9057845,116.2636078 39.9052945,116.2634898 39.9055005,116.2631578 39.9054685,116.2637338 39.9055285,116.2634198 39.9054805,116.2630968 39.9055055,116.2627578 39.9055285,116.2634558 39.9056225,116.2631308 39.9056425,116.2634388 39.9055095,116.2638278 39.9054665,116.2634078 39.9054455,116.2630088 39.9059495,116.2632988 39.9058645,116.2635858 39.9057085,116.2634068 39.9054925,116.26329179999999 39.9057375,116.2634558 39.9054935,116.26311679999999 39.9055275,116.2629908 39.9057815,116.2630648 39.9055235,116.26330879999999 39.9056755,116.2636218 39.9055125,116.2633458 39.9054055,116.2630758 39.9055685,116.2636368 39.9055345,116.2633048 39.9056685,116.2629938 39.9057145,116.26327979999999 39.9055345,116.2635858 39.9055055)";
	
	/**
	 * WKT转Points
	 * 
	 * @param wkt
	 * @return
	 * @throws Exception 
	 */
	public static List<Point> wktToPoints(String wkt) throws Exception{
		if(!wkt.startsWith("LINESTRING(")||wkt.startsWith(")")){
			throw new Exception(" WKT format must like LINESTRING(。，。。。。 )");
		}
		List<Point> points=new ArrayList<Point>();
		String str=wkt.substring(wkt.indexOf('(')+1, wkt.indexOf(")"));
		String [] arrs=str.split(",");
		Point point=null;
		for (String lnglatStr : arrs) {
			point=new Point(Double.parseDouble(lnglatStr.split(" ")[1]), Double.parseDouble(lnglatStr.split(" ")[0]));
			points.add(point);
		}
		return points;
	}
	
	public static void main(String[] args) throws Exception {
		System.out.println(WKTUtil.wktToPoints(WKTUtil.wkt_sample).size());
	}

}
